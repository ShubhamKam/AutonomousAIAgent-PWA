name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Check project structure
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Package.json exists:"
        ls -la package.json || echo "No package.json found"
        echo "Android directory exists:"
        ls -la android/ || echo "No android directory found"
        
    - name: Create package.json if missing
      run: |
        if [ ! -f package.json ]; then
          echo "Creating package.json..."
          cat > package.json << EOF
        {
          "name": "autonomous-ai-agent",
          "version": "1.0.0",
          "description": "Autonomous AI Agent PWA",
          "main": "index.js",
          "scripts": {
            "test": "echo \"Error: no test specified\" && exit 1"
          },
          "dependencies": {
            "@capacitor/core": "^6.0.0",
            "@capacitor/android": "^6.0.0"
          },
          "devDependencies": {
            "@capacitor/cli": "^6.0.0"
          }
        }
        EOF
        fi
        
    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        npm install -g @capacitor/cli
      
    - name: Initialize Capacitor if needed
      run: |
        if [ ! -f capacitor.config.json ]; then
          npx cap init "AutonomousAIAgent" "com.autonomousai.agent" --web-dir=www
        fi
        
    - name: Ensure www directory exists
      run: |
        if [ ! -d www ]; then
          mkdir -p www
          cp *.html www/ || true
          cp *.js www/ || true
        fi
        
    - name: Add Android platform if needed
      run: |
        if [ ! -d android ]; then
          npx cap add android
        fi
        
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses || true
      
    - name: Build Debug APK
      run: |
        cd android
        echo "Building APK..."
        ./gradlew assembleDebug --stacktrace --info
        echo "APK build completed!"
        ls -la app/build/outputs/apk/debug/ || echo "APK not found"
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: app-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs
        path: |
          android/app/build/outputs/logs/
          android/build/outputs/logs/
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: android/app/build/outputs/apk/debug/app-debug.apk
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}