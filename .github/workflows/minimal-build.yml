name: Minimal Android Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0

    - name: Check project structure
      run: |
        echo "Repository structure:"
        ls -la
        echo "AutonomousAIAgent directory:"
        ls -la AutonomousAIAgent/ || echo "Directory not found"
        echo "Package.json exists:"
        cat AutonomousAIAgent/package.json || echo "Package.json not found"

    - name: Install dependencies with Yarn
      working-directory: AutonomousAIAgent
      run: |
        npm install -g yarn
        yarn install --frozen-lockfile || yarn install

    - name: Create minimal App.js for testing
      working-directory: AutonomousAIAgent
      run: |
        # Create a minimal App.js that's guaranteed to work
        cat > App.js << 'EOF'
        import React from 'react';
        import {
          SafeAreaView,
          ScrollView,
          StatusBar,
          StyleSheet,
          Text,
          View,
        } from 'react-native';

        function App() {
          return (
            <SafeAreaView style={styles.container}>
              <StatusBar barStyle="dark-content" />
              <ScrollView contentInsetAdjustmentBehavior="automatic">
                <View style={styles.body}>
                  <Text style={styles.sectionTitle}>
                    ü§ñ Autonomous AI Agent
                  </Text>
                  <Text style={styles.sectionDescription}>
                    Your AI agent is initializing...
                  </Text>
                  <Text style={styles.highlight}>
                    Built with React Native
                  </Text>
                </View>
              </ScrollView>
            </SafeAreaView>
          );
        }

        const styles = StyleSheet.create({
          container: {
            flex: 1,
            backgroundColor: '#fff',
          },
          body: {
            backgroundColor: '#fff',
            padding: 20,
          },
          sectionTitle: {
            fontSize: 24,
            fontWeight: '600',
            color: '#000',
            textAlign: 'center',
            marginBottom: 20,
          },
          sectionDescription: {
            marginTop: 8,
            fontSize: 18,
            fontWeight: '400',
            color: '#666',
            textAlign: 'center',
          },
          highlight: {
            fontWeight: '700',
            color: '#007AFF',
            textAlign: 'center',
            marginTop: 20,
          },
        });

        export default App;
        EOF

    - name: Make gradlew executable
      working-directory: AutonomousAIAgent
      run: chmod +x android/gradlew

    - name: Clean Android build
      working-directory: AutonomousAIAgent
      run: |
        cd android
        ./gradlew clean

    - name: Build APK
      working-directory: AutonomousAIAgent
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon

    - name: Verify APK was created
      working-directory: AutonomousAIAgent
      run: |
        APK_PATH="android/app/build/outputs/apk/debug/app-debug.apk"
        if [ -f "$APK_PATH" ]; then
          echo "‚úÖ APK built successfully!"
          ls -lh "$APK_PATH"
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
        else
          echo "‚ùå APK not found"
          echo "Build output directory contents:"
          find android/app/build -name "*.apk" || echo "No APK files found"
          exit 1
        fi

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: AutonomousAIAgent-Minimal
        path: AutonomousAIAgent/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Create simple release
      if: success()
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: minimal-build-${{ github.run_number }}
        release_name: Autonomous AI Agent - Minimal Build ${{ github.run_number }}
        body: |
          # ü§ñ Autonomous AI Agent - Minimal Working Build
          
          **Build:** ${{ github.run_number }}
          **Date:** $(date +'%Y-%m-%d %H:%M:%S UTC')
          **Commit:** ${{ github.sha }}
          
          ## üì± Installation
          1. Download the APK below
          2. Enable "Install from unknown sources" on Android
          3. Install and test the basic app functionality
          
          ## üîß Technical Details
          - React Native 0.81.0
          - Minimal working configuration
          - Debug build for testing
          
          **Note:** This is a minimal build to verify the build system works.
          The full AI agent features will be enabled once the build pipeline is stable.
        draft: false
        prerelease: true

    - name: Upload APK to release
      if: success()
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: AutonomousAIAgent/android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: AutonomousAIAgent-Minimal-${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Build failure debug
      if: failure()
      working-directory: AutonomousAIAgent
      run: |
        echo "üö® BUILD FAILED - DEBUGGING INFO:"
        echo "================================="
        
        echo "üìÅ Project structure:"
        ls -la
        
        echo "üì¶ Node version:"
        node --version
        npm --version
        
        echo "‚òï Java version:"
        java --version
        
        echo "ü§ñ Android SDK:"
        echo $ANDROID_HOME
        ls -la $ANDROID_HOME/build-tools/ || echo "Build tools not found"
        
        echo "üì± Gradle info:"
        cd android
        ./gradlew --version || echo "Gradle failed"
        
        echo "üìã Build logs:"
        find . -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \; || echo "No log files found"
        
        echo "üîç APK search:"
        find . -name "*.apk" || echo "No APK files anywhere"